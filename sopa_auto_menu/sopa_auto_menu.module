<?php

/**
 * SOPA Auto Menu
 *
 * Simple Drupal module to auto-create/update disabled menu items for selected
 * content types.
 *
 * @copyright Copyright (c) 2014, The University of Edinburgh
 * @author Matt Burns <matt.burns@ed.ac.uk>
 * @version 1.0.0
 * @package SOPA
 * @subpackage SOPA Auto Menu
 */

/**
 * Displays a brief help message. Implements hook_help().
 *
 * @param string $path
 * @param mixed $arg
 * @return string
 */
if (! function_exists('sopa_auto_menu_help')) {
  function sopa_auto_menu_help($path, $arg) {

    if ($path == 'admin/structure/menu/sopa_auto_menu') {
      return '<p>'
        . t('SOPA Auto Menu provides a way to force nodes to create menu items, but they will be automatically disabled to prevent display in the node hierarchy (menus, breadcrumbs, etc.).')
        . '</p>';
    }

  }
}

/**
 * Add a permission to allow access to the module. Implements hook_permission().
 *
 * @return array
 */
if (! function_exists('sopa_auto_menu_permission')) {
  function sopa_auto_menu_permission() {

    $items = array();

    $items['administer sopa auto menu settings'] = array(
      'title' => t('Administer SOPA Auto Menu'),
      'description' => t('Enable and disable SOPA Auto Menu on content types'),
      'restrict access' => true,
      'warning' => t('Warning: Give to trusted roles only; this permission can affect site navigation.'),
    );

    return $items;

  }
}

/**
 * Add a navigation option to access the admin panel. Implements hook_menu().
 *
 * @return array
 */
if (! function_exists('sopa_auto_menu_menu')) {
  function sopa_auto_menu_menu() {

    $items = array();

    $items['admin/structure/menu/sopa_auto_menu'] = array(
      'title' => t('SOPA Auto Menu'),
      'description' => t('Allows nodes to be automatically forced to have disabled menu items'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('sopa_auto_menu_display_settings_form'),
      'file' => 'sopa_auto_menu.admin.inc',
      'access arguments' => array('administer sopa auto menu settings'),
      'type' => MENU_LOCAL_TASK,
    );

    return $items;

  }
}

/**
 * Create a menu item when a node is created.  Implements hook_node_insert().
 *
 * @param mixed $node
 */
if (! function_exists('sopa_auto_menu_node_insert')) {
  function sopa_auto_menu_node_insert($node) {
    sopa_auto_menu_add_disabled_node_menu_item($node);
  }
}

/**
 * Create or update a menu item when a node is updated.  Implements
 * hook_node_update().
 *
 * @param mixed $node
 */
if (! function_exists('sopa_auto_menu_node_update')) {
  function sopa_auto_menu_node_update($node) {
    sopa_auto_menu_add_disabled_node_menu_item($node);
  }
}

/**
 * Adds or update a disabled menu item for the supplied node.
 *
 * @param mixed $node
 */
if (! function_exists('sopa_auto_menu_add_disabled_node_menu_item')) {
  function sopa_auto_menu_add_disabled_node_menu_item(&$node) {

    $content_types = array_values(variable_get('sopa_auto_menu_content_types', array()));
    $is_selected_content_type = in_array($node->type, $content_types, $strict=true);

    if ($is_selected_content_type) {
      $node->menu['enabled'] = true;
      $node->menu['hidden'] = true;
      $node->menu['link_title'] = $node->title;
      $node->menu['description'] = '';
      $node->menu['_sopa_auto_menu'] = true;
    }

  }
}
